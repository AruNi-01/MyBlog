import{_ as n,o as s,c as a,d as p}from"./app.a7f50c2c.js";const t={},e=p(`<p>\u8BB0\u5F55\u7B2C\u4E00\u6B21\u53C2\u52A0\u5468\u8D5B</p><h2 id="\u5BFC\u8BED" tabindex="-1"><a class="header-anchor" href="#\u5BFC\u8BED" aria-hidden="true">#</a> \u5BFC\u8BED</h2><p>\u5237\u529B\u6263\u4E5F\u6709 100 \u591A\u5929\u4E86\uFF0C\u7D2F\u8BA1\u6709 280 \u591A\u9898\u3002</p><p><img src="https://run-notes.oss-cn-beijing.aliyuncs.com/notes/image-20220821223310781.png" alt="lc"></p><p>\u8FD9\u662F\u7B2C\u4E00\u6B21\u53C2\u52A0\u5468\u8D5B\uFF0C\u60F3\u4F53\u9A8C\u4E00\u4E0B\u5B9E\u9645\u7ADE\u8D5B\u7684\u611F\u89C9\uFF0C\u7ED3\u679C\u521A\u597D\u8FD9\u6B21\u6BD4\u8F83\u96BE\uFF08\u770B\u8BC4\u8BBA\u533A\u5927\u4F6C\u4EEC\u8BF4\u7684\uFF09\uFF0C\u6240\u4EE5\u53EA\u66B4\u529B AC \u4E86\u7B2C\u4E00\u9898\uFF08\u81EA\u4FE1\u5FC3\u53D7\u5230\u4E86\u4E9B\u8BB8\u7684\u6253\u51FB\uFF09\u3002</p><p>\u7B2C\u4E00\u9898 8 \u5206\u949F AC \u4E4B\u540E\uFF0C\u5269\u4E0B\u7684\u786C\u662F\u60F3\u4E0D\u51FA\u6765\uFF0C\u5750\u4E86\u4E00\u4E2A\u5C0F\u65F6\u7684\u7262\u4FBF\u5403\u996D\u53BB\u4E86\u3002</p><p>\u4F46\u662F\u4E0D\u7BA1\u600E\u4E48\u6837\uFF0C\u8D77\u7801\u6709\u5206\uFF0C\u54C8\u54C8\u54C8\uFF0C\u7B2C\u4E00\u6B21\u6536\u5230\u5206\u6570\u8FD8\u662F\u5F88\u5F00\u5FC3\u7684 ~</p><h2 id="\u9898\u89E3" tabindex="-1"><a class="header-anchor" href="#\u9898\u89E3" aria-hidden="true">#</a> \u9898\u89E3</h2><blockquote><p>\u5468\u8D5B\u7ED3\u675F\u540E\uFF0C\u7ACB\u9A6C\u770B\u7740\u5927\u4F6C\u4EEC\u7684\u9898\u89E3\u5B66\u4E60</p></blockquote><h3 id="problem-1-\u8D62\u5F97\u6BD4\u8D5B\u9700\u8981\u7684\u6700\u5C11\u8BAD\u7EC3\u65F6\u957F" tabindex="-1"><a class="header-anchor" href="#problem-1-\u8D62\u5F97\u6BD4\u8D5B\u9700\u8981\u7684\u6700\u5C11\u8BAD\u7EC3\u65F6\u957F" aria-hidden="true">#</a> <a href="https://leetcode.cn/problems/minimum-hours-of-training-to-win-a-competition/" target="_blank" rel="noopener noreferrer">Problem 1. \u8D62\u5F97\u6BD4\u8D5B\u9700\u8981\u7684\u6700\u5C11\u8BAD\u7EC3\u65F6\u957F</a></h3><ul><li>\u72B6\u6001\uFF1AAC</li><li>\u65F6\u95F4\uFF1A8 min</li><li>\u6807\u7B7E\uFF1A\u6A21\u62DF</li></ul><h4 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h4><p>\u6B63\u5E38\u6A21\u62DF\uFF1A</p><ul><li>\u904D\u5386\u6240\u6709\u5BF9\u624B\uFF0C\u4E00\u8FB9\u6311\u6218\u5BF9\u624B\u4E00\u8FB9\u8BAD\u7EC3\uFF08\u5F53\u7ECF\u9A8C\u548C\u7CBE\u529B\u4E0D\u8DB3\u65F6\uFF09</li></ul><p><strong>\u4EE3\u7801\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minNumberOfHours</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialEnergy<span class="token punctuation">,</span> <span class="token keyword">int</span> initialExperience<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> energy<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> experience<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> energy<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5F53\u7ECF\u9A8C\u548C\u7CBE\u529B\u4E25\u683C\u8D85\u8D8A\u5BF9\u624B\u65F6\uFF0C\u5219\u51FB\u8D25\u4ED6</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>initialEnergy <span class="token operator">&gt;</span> energy<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> initialExperience <span class="token operator">&gt;</span> experience<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                initialEnergy <span class="token operator">-=</span> energy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                initialExperience <span class="token operator">+=</span> experience<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                i<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>initialEnergy <span class="token operator">&lt;=</span> energy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>		<span class="token comment">// \u7CBE\u529B\u4E0D\u8DB3\uFF0C\u539F\u5730\u5F00\u59CB\u8BAD\u7EC3</span>
                initialEnergy<span class="token operator">++</span><span class="token punctuation">;</span>
                res<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>initialExperience <span class="token operator">&lt;=</span> experience<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>	<span class="token comment">// \u7ECF\u9A8C\u4E0D\u8DB3\uFF0C\u539F\u5730\u5F00\u59CB\u8BAD\u7EC3</span>
                initialExperience<span class="token operator">++</span><span class="token punctuation">;</span>
                res<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="problem-2-\u6700\u5927\u56DE\u6587\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#problem-2-\u6700\u5927\u56DE\u6587\u6570\u5B57" aria-hidden="true">#</a> <a href="https://leetcode.cn/problems/largest-palindromic-number/" target="_blank" rel="noopener noreferrer">Problem 2. \u6700\u5927\u56DE\u6587\u6570\u5B57</a></h3><ul><li>\u72B6\u6001\uFF1AWA</li><li>\u65F6\u95F4\uFF1ANULL</li><li>\u6807\u7B7E\uFF1A\u8D2A\u5FC3 + \u54C8\u5E0C\u8868</li></ul><h4 id="\u601D\u8DEF-1" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF-1" aria-hidden="true">#</a> \u601D\u8DEF</h4><ul><li>\u60F3\u8981\u5F62\u6210\u56DE\u6587\u4E32\uFF0C\u90A3\u6570\u5B57\u80AF\u5B9A\u662F\u6210\u5076\u6570\u6B21\u51FA\u73B0\u7684\uFF0C\u4E2D\u95F4\u8FD8\u53EF\u4EE5\u63D2\u5165\u4E00\u4E2A\u5355\u72EC\u7684\u6570\u5B57\uFF0C\u90A3\u4E48\u53EF\u4EE5\u5C06\u56DE\u6587\u4E32\u62C6\u62103\u90E8\u5206\uFF1A <ul><li>\u4E24\u8FB9\u4E92\u76F8\u76F8\u53CD\u7684\u90E8\u5206\uFF08\u4F8B\u5982 <code>123</code> \u548C <code>321</code>\uFF0C<code>9987</code> \u548C <code>7899</code>\uFF09\uFF0C\u8FD9\u4E24\u90E8\u5206\u4E2D\u7684\u6570\u5B57\u6BCF\u4E2A\u90FD\u662F\u51FA\u73B0\u5076\u6570\u6B21\uFF1B</li><li>\u4E2D\u95F4\u5355\u72EC\u7684\u4E00\u4E2A\u6570\u5B57\uFF0C\u8FD9\u4E2A\u6570\u5B57\u662F\u53EF\u9009\u7684\uFF1B</li></ul></li><li>\u56E0\u6B64\u9700\u8981\u4E00\u4E2A <strong>\u54C8\u5E0C\u6570\u7EC4</strong>\uFF0C\u7528\u4E8E\u8BB0\u5F55\u9898\u76EE\u7ED9\u51FA\u7684\u5B57\u7B26\u4E32\u4E2D\u5404\u4E2A\u6570\u5B57\u51FA\u73B0\u7684\u6B21\u6570\uFF0C\u5C06\u5076\u6570\u6B21\u7684\u6570\u5B57\u9009\u51FA\u6765\uFF1B</li><li>\u82E5\u9009\u5B8C\u540E\u8FD8\u6709\u5355\u72EC\u7684\u6570\u5B57\uFF0C\u5219\u53EF\u4EE5\u63D2\u5728\u4E2D\u95F4\uFF1B</li><li>\u8D2A\u5FC3\uFF1A <ul><li>\u56E0\u4E3A\u9898\u76EE\u4E2D\u8BF4\u8981\u6700\u5927\u56DE\u6587\u6574\u6570\uFF0C\u6240\u4EE5\u6211\u4EEC\u8981\u4ECE\u5927\u5230\u5C0F\u5F00\u59CB\u9009\uFF08\u5373\u4ECE9\u9009\u52300\uFF09\uFF1B</li></ul></li><li>\u6CE8\u610F\uFF1A <ul><li>\u9898\u76EE\u4E2D\u8BF4\u4E0D\u80FD\u6709\u524D\u5BFC0\uFF0C\u6240\u4EE5\u5F53\u9009\u52300\u65F6\uFF0C\u82E5\u4E4B\u524D\u7684\u6570\u5B57\u90FD\u6CA1\u88AB\u9009\u8FC7\uFF0C\u5219\u4E0D\u80FD\u628A0\u9009\u8FDB\u7ED3\u679C\uFF1B</li></ul></li></ul><p><strong>\u4EE3\u7801\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">largestPalindromic</span><span class="token punctuation">(</span><span class="token class-name">String</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">StringBuilder</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u7EDF\u8BA1 num \u4E2D\u5404\u6570\u5B57\u7684\u6570\u91CF</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hash <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> ch <span class="token operator">:</span> num<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// ch \u662F\u5B57\u7B26\uFF0C\u51CF\u53BB\u5B57\u7B26 &#39;0&#39; \u7684\u7F16\u7801\uFF0C\u624D\u5F97 ch \u7684\u6570\u5B57</span>
            hash<span class="token punctuation">[</span>ch <span class="token operator">-</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u8D2A\u5FC3\uFF1A\u4ECE\u6700\u5927\u7684\u6570\u5F00\u59CB\uFF08\u56E0\u4E3A\u8981\u627E\u6700\u5927\u56DE\u6587\u6570\uFF09</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u679A\u4E3E\u5230 0\uFF0C\u4F46\u662F\u4E4B\u524D\u4ECE\u6765\u6CA1\u6709\u52A0\u5165\u8FC7\u522B\u7684\u6570\u5B57\uFF0C\u4E3A\u4E86\u907F\u514D\u524D\u5BFC 0</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> res<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>

            <span class="token keyword">int</span> cnt <span class="token operator">=</span> hash<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>      <span class="token comment">// \u53EA\u8981\u6570\u91CF &gt;= 2\uFF0C\u90FD\u80FD\u5F62\u6210\u56DE\u6587</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> cnt<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                hash<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u6784\u9020\u51FA\u9006\u5E8F\u7684\u540E\u534A\u6BB5</span>
        <span class="token class-name">StringBuilder</span> res2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u770B\u770B\u662F\u5426\u6709\u5269\u4E0B\u7684\u5355\u72EC\u7684\u6570\u5B57\uFF0C\u53EF\u4EE5\u63D2\u5728\u4E2D\u95F4</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>hash<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u5C06\u524D\u534A\u6BB5\uFF0C\u4E2D\u95F4\u6570\uFF0C\u540E\u534A\u6BB5\u62FC\u63A5\u8D77\u6765</span>
        <span class="token class-name">String</span> result <span class="token operator">=</span> res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&quot;0&quot;</span> <span class="token operator">:</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="problem-3-\u611F\u67D3\u4E8C\u53C9\u6811\u9700\u8981\u7684\u603B\u65F6\u95F4" tabindex="-1"><a class="header-anchor" href="#problem-3-\u611F\u67D3\u4E8C\u53C9\u6811\u9700\u8981\u7684\u603B\u65F6\u95F4" aria-hidden="true">#</a> <a href="https://leetcode.cn/problems/amount-of-time-for-binary-tree-to-be-infected/" target="_blank" rel="noopener noreferrer">Problem 3. \u611F\u67D3\u4E8C\u53C9\u6811\u9700\u8981\u7684\u603B\u65F6\u95F4</a></h3><ul><li>\u72B6\u6001\uFF1AWA</li><li>\u65F6\u95F4\uFF1ANULL</li><li>\u6807\u7B7E\uFF1ABFS + \u54C8\u5E0C\u8868</li></ul><h4 id="\u601D\u8DEF-2" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF-2" aria-hidden="true">#</a> \u601D\u8DEF</h4><ul><li>\u9996\u5148\u60F3\u5230\u7684\u80AF\u5B9A\u662F\u5C42\u5E8F\u904D\u5386\uFF0C\u4F46\u662F\u5C42\u5E8F\u904D\u5386\u7684\u65F6\u5019\u6BCF\u529E\u6CD5\u611F\u67D3\u56DE\u7236\u8282\u70B9 <ul><li>\u6240\u4EE5\u5C31\u9700\u8981\u5EFA\u7ACB\u4E00\u4E2A\u5F53\u524D\u8282\u70B9\u548C\u5176\u7236\u8282\u70B9\u7684\u6620\u5C04\u5173\u7CFB\uFF1B</li><li>\u8FD9\u662F\u7B2C\u4E00\u6B21BFS\uFF0C\u540C\u65F6\u627E\u51FA\u521D\u59CB\u88AB\u611F\u67D3\u7684\u8282\u70B9\uFF0C\u7B2C\u4E8C\u6B21 BFS \u4ECE\u6B64\u8282\u70B9\u5F00\u59CB\uFF1B</li></ul></li><li>\u628A\u6BCF\u4E2A\u8282\u70B9\u548C\u5176\u7236\u8282\u70B9\u5173\u8054\u8D77\u6765\u540E\uFF0C\u4FBF\u53EF\u4EE5\u518D\u8FDB\u884C\u4E00\u6B21BFS\uFF0C\u8FD9\u6B21\u8FDB\u884C\u611F\u67D3\uFF1B <ul><li>\u9700\u8981\u518D\u5EFA\u7ACB\u4E00\u4E2A\u54C8\u5E0C\u8868\uFF0C\u5173\u8054\u5F53\u524D\u8282\u70B9\u662F\u5426\u88AB\u611F\u67D3\uFF1B</li><li>\u9700\u8981\u4ECE\u521D\u59CB\u88AB\u611F\u67D3\u7684\u8282\u70B9\u5F00\u59CB\u904D\u5386\uFF1B</li></ul></li></ul><p><strong>\u4EE3\u7801\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">amountOfTime</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// key: \u5F53\u524D\u8282\u70B9\uFF1B val: \u5F53\u524D\u8282\u70B9\u7684\u7236\u8282\u70B9</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TreeNode</span><span class="token punctuation">,</span> <span class="token class-name">TreeNode</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// key: \u5F53\u524D\u8282\u70B9\uFF1B val: \u5F53\u524D\u8282\u70B9\u662F\u5426\u88AB\u611F\u67D3</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TreeNode</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> flag <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TreeNode</span><span class="token punctuation">&gt;</span></span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        queue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u6839\u8282\u70B9\u65E0\u7236\u8282\u70B9</span>
        <span class="token class-name">TreeNode</span> infectionNode <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>      <span class="token comment">// \u6307\u5411\u611F\u67D3\u7684\u8282\u70B9</span>

        <span class="token comment">// \u7B2C\u4E00\u6B21 BFS\uFF1A\u6807\u8BB0\u7236\u8282\u70B9\u548C\u627E\u51FA\u8D77\u59CB\u7684\u611F\u67D3\u8282\u70B9</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> size <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u904D\u5386\u6BCF\u4E00\u5C42</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">TreeNode</span> node <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>val <span class="token operator">==</span> start<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// \u627E\u5230\u611F\u67D3\u8282\u70B9</span>
                    infectionNode <span class="token operator">=</span> node<span class="token punctuation">;</span>
                    flag<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    flag<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    queue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>right <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    queue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        queue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>infectionNode<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// \u521D\u59CB\u611F\u67D3\u8282\u70B9\u5165\u961F</span>
        <span class="token keyword">int</span> minutes <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token comment">// \u7B2C\u4E8C\u6B21 BFS\uFF1A\u5F00\u59CB\u611F\u67D3</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> size <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u904D\u5386\u6BCF\u4E00\u5C42</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">TreeNode</span> node <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">// \u611F\u67D3\u5F53\u524D\u8282\u70B9\u7684\u5DE6\u53F3\u5B50\u8282\u70B9\uFF0C\u5E76\u8FDB\u5165\u4E0B\u4E00\u5C42\u7684\u961F\u5217\u4E2D</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>left <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>flag<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    queue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    flag<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>right <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>flag<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    queue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    flag<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token comment">// \u611F\u67D3\u7236\u8282\u70B9\uFF0C\u4E5F\u52A0\u5165\u4E0B\u4E00\u5C42\u7684\u961F\u5217\u4E2D</span>
                <span class="token class-name">TreeNode</span> parentNode <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>parentNode <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>flag<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>parentNode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>parentNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    flag<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>parentNode<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u6BCF\u4E00\u5C42\u611F\u67D3\u5B8C\uFF0C\u5C06 minutes +1</span>
            minutes<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> minutes <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>     <span class="token comment">// \u521D\u59CB\u611F\u67D3\u7684\u8282\u70B9\u4E0D\u7B97\u65F6\u95F4\uFF0C\u6240\u4EE5\u8981\u51CF\u6389</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7ED3\u675F\u8BED" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u675F\u8BED" aria-hidden="true">#</a> \u7ED3\u675F\u8BED</h2><p>\u7B2C\u4E00\u6B21\u53C2\u52A0\u5468\u8D5B\uFF0C\u6240\u4EE5\u5148\u8BB0\u5F55\u4E00\u4E0B\uFF0C\u4E0B\u4E00\u4E2A\u76EE\u6807\u662F\u6BCF\u573A\u80FD\u4FDD 2 \u4E89 3\uFF0C\u505A\u5230\u7684\u65F6\u5019\u518D\u8BB0\u5F55\u4E00\u4E0B\u3002</p>`,30),o=[e];function c(l,i){return s(),a("div",null,o)}var k=n(t,[["render",c],["__file","2022-08-21-LeetCode \u7B2C 307 \u573A\u5468\u8D5B.html.vue"]]);export{k as default};
